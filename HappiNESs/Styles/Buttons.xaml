<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:local="clr-namespace:BioFocoApp">

    <ResourceDictionary.MergedDictionaries>
        <!-- Order is important -->
        <ResourceDictionary Source="Colors.xaml" />
        <ResourceDictionary Source="Fonts.xaml" />
    </ResourceDictionary.MergedDictionaries>

    <!-- Side Menu Styles from File Page -->
    <Style TargetType="{x:Type Button}" x:Key="FileSideMenuButtons">
        <Setter Property="Background" Value="{StaticResource BackgroundLightBrush}" />
        <Setter Property="BorderThickness" Value="0" />
        <Setter Property="HorizontalAlignment" Value="Stretch" />
        <Setter Property="Padding" Value="15" />
        <Setter Property="Cursor" Value="Hand" />

        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Border x:Name="Border" Background="{TemplateBinding Background}">
                        <Border x:Name="Container" Padding="{TemplateBinding Padding}" Background="Transparent">
                            <ContentPresenter VerticalAlignment="Center" HorizontalAlignment="Stretch" />
                        </Border>
                    </Border>
                    <ControlTemplate.Triggers>
                        <!-- Hover Effect -->
                        <EventTrigger RoutedEvent="MouseEnter">
                            <BeginStoryboard>
                                <Storyboard>
                                    <ColorAnimation To="{StaticResource BlueLight}" Duration="0:0:0.3" Storyboard.TargetName="Container" Storyboard.TargetProperty="Background.Color" />
                                </Storyboard>
                            </BeginStoryboard>
                        </EventTrigger>
                        <EventTrigger RoutedEvent="MouseLeave">
                            <BeginStoryboard>
                                <Storyboard>
                                    <ColorAnimation To="Transparent" Duration="0:0:0.3" Storyboard.TargetName="Container" Storyboard.TargetProperty="Background.Color" />
                                </Storyboard>
                            </BeginStoryboard>
                        </EventTrigger>
                        <Trigger Property="local:IsSelectedProperty.Value" Value="True">
                            <Setter Property="Background" TargetName="Border" Value="{StaticResource BlueLightBrush}" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!-- Side Menu Icon Style -->
    <Style TargetType="{x:Type TextBlock}" x:Key="FileSideMenuIcon">
        <Setter Property="Width" Value="{Binding ActualHeight, RelativeSource={RelativeSource Self}}" />
        <Setter Property="FontFamily" Value="{StaticResource FontAwesome}" />
        <Setter Property="FontSize" Value="{StaticResource FontSizeLarge}" />
        <Setter Property="Foreground" Value="{StaticResource ForegroundVeryDarkBrush}" />
        <Setter Property="Margin" Value="0 0 10 0" />
        <Setter Property="VerticalAlignment" Value="Center" />

        <Style.Triggers>
            <Trigger Property="IsEnabled" Value="false">
                <Setter Property = "Foreground" Value="{StaticResource ForegroundDarkBrush}"/>
            </Trigger>
        </Style.Triggers>
    </Style>

    <!-- Side Menu Label Style -->
    <Style TargetType="{x:Type TextBlock}" x:Key="FileSideMenuLabel">
        <Setter Property="VerticalAlignment" Value="Center" />
        <Setter Property="Foreground" Value="{StaticResource ForegroundVeryDarkBrush}" />
        <Setter Property="FontSize" Value="{StaticResource FontSizeRegular}" />

        <Style.Triggers>
            <Trigger Property="IsEnabled" Value="false">
                <Setter Property = "Foreground" Value="{StaticResource ForegroundDarkBrush}"/>
            </Trigger>
        </Style.Triggers>
    </Style>
    
    <!-- Base Button -->
    <Style TargetType="{x:Type Button}" x:Key="BaseButton" BasedOn="{StaticResource BaseStyle}">
        <Setter Property="Background" Value="{StaticResource BackgroundDarkBrush}" />
        <Setter Property="BorderThickness" Value="0" />
        <Setter Property="FontSize" Value="{StaticResource FontSizeLarge}" />
        <Setter Property="Padding" Value="50 10" />
        <Setter Property="Margin" Value="0 10" />
        <Setter Property="Cursor" Value="Hand" />

        <Setter Property="local:IsBusyProperty.Value" Value="False" />

        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ButtonBase}">
                    <Border x:Name="Border"
                            CornerRadius="10"
                            BorderBrush="{TemplateBinding BorderBrush}"
                            BorderThickness="{TemplateBinding BorderThickness}"
                            Background="{TemplateBinding Background}" 
                            SnapsToDevicePixels="True">
                        <Grid>
                            <!-- Button Label -->
                            <TextBlock x:Name="Label"
                                   Text="{TemplateBinding Content}"
                                   Visibility="{TemplateBinding local:IsBusyProperty.Value, Converter={local:BooleanToVisibilityConverter}}"
                                   Focusable="False" 
                                   FontFamily="{TemplateBinding FontFamily}"
                                   FontSize="{TemplateBinding FontSize}"
                                   HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" 
                                   Margin="{TemplateBinding Padding}" 
                                   SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" 
                                   VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                            <!-- Spin Icon -->
                            <TextBlock Style="{StaticResource SpinningIcon}" 
                                   HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" 
                                   FontSize="{TemplateBinding FontSize}"
                                   VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                   Visibility="{TemplateBinding local:IsBusyProperty.Value, Converter={local:BooleanToVisibilityConverter}, ConverterParameter=True}"
                                   />

                        </Grid>
                    </Border>
                    <!-- Hover Effects -->
                    <ControlTemplate.Triggers>
                        <EventTrigger RoutedEvent="MouseEnter">
                            <BeginStoryboard>
                                <Storyboard>
                                    <ColorAnimation To="{StaticResource BackgroundNormal}" Duration="0:0:0.3" Storyboard.TargetName="Border" Storyboard.TargetProperty="Background.Color" />
                                </Storyboard>
                            </BeginStoryboard>
                        </EventTrigger>
                        <EventTrigger RoutedEvent="MouseLeave">
                            <BeginStoryboard>
                                <Storyboard>
                                    <ColorAnimation To="{StaticResource BackgroundDark}" Duration="0:0:0.3" Storyboard.TargetName="Border" Storyboard.TargetProperty="Background.Color" />
                                </Storyboard>
                            </BeginStoryboard>
                        </EventTrigger>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter Property="Foreground" TargetName="Label" Value="{StaticResource BackgroundVeryDarkBrush}" />
                            <Setter Property="Background" TargetName="Border" Value="{StaticResource BackgroundNormalBrush}" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!-- Primary Button -->
    <Style TargetType="{x:Type Button}" x:Key="PrimaryButton" BasedOn="{StaticResource BaseStyle}">
        <Setter Property="Background" Value="{StaticResource BlueLightBrush}" />
        <Setter Property="BorderThickness" Value="0" />
        <Setter Property="FontSize" Value="{StaticResource FontSizeRegular}" />
        <Setter Property="Padding" Value="50 10" />
        <Setter Property="Margin" Value="10 10" />
        <Setter Property="Cursor" Value="Hand" />

        <Setter Property="local:IsBusyProperty.Value" Value="False" />

        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Border x:Name="Border"
                            CornerRadius="10"
                            BorderBrush="{TemplateBinding BorderBrush}"
                            BorderThickness="{TemplateBinding BorderThickness}"
                            Background="{TemplateBinding Background}" 
                            SnapsToDevicePixels="True">
                        <Grid>
                            <!-- Button Label -->
                            <TextBlock x:Name="Label"
                                       Text="{TemplateBinding Content}"
                                       Foreground="{TemplateBinding Foreground}"
                                       Visibility="{TemplateBinding local:IsBusyProperty.Value, Converter={local:BooleanToVisibilityConverter}}"
                                       Focusable="False" 
                                       FontFamily="{TemplateBinding FontFamily}"
                                       FontSize="{TemplateBinding FontSize}"
                                       HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" 
                                       Margin="{TemplateBinding Padding}" 
                                       SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" 
                                       VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                            <!-- Spin Icon -->
                            <TextBlock Style="{StaticResource SpinningIcon}" 
                                       HorizontalAlignment="Center" 
                                       VerticalAlignment="Center"
                                       FontSize="{TemplateBinding FontSize}"
                                       Visibility="{TemplateBinding local:IsBusyProperty.Value, Converter={local:BooleanToVisibilityConverter}, ConverterParameter=True}"
                                       />

                        </Grid>
                    </Border>
                    <!-- Hover Effects -->
                    <ControlTemplate.Triggers>
                        <EventTrigger RoutedEvent="MouseEnter">
                            <BeginStoryboard>
                                <Storyboard>
                                    <ColorAnimation To="{StaticResource BlueVeryLight}" Duration="0:0:0.2" Storyboard.TargetName="Border" Storyboard.TargetProperty="Background.Color" />
                                </Storyboard>
                            </BeginStoryboard>
                        </EventTrigger>
                        <EventTrigger RoutedEvent="MouseLeave">
                            <BeginStoryboard>
                                <Storyboard>
                                    <ColorAnimation To="{StaticResource BlueLight}" Duration="0:0:0.2" Storyboard.TargetName="Border" Storyboard.TargetProperty="Background.Color" />
                                </Storyboard>
                            </BeginStoryboard>
                        </EventTrigger>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter Property="Background" TargetName="Border" Value="{StaticResource BlueVeryLightBrush}" />
                            <Setter Property="Foreground" TargetName="Label" Value="{StaticResource BackgroundVeryDarkBrush}" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!-- Secondary Button -->
    <Style TargetType="{x:Type Button}" x:Key="SecondaryButton" BasedOn="{StaticResource BaseStyle}">
        <Setter Property="Background" Value="{StaticResource RedLightBrush}" />
        <Setter Property="BorderThickness" Value="0" />
        <Setter Property="FontSize" Value="{StaticResource FontSizeRegular}" />
        <Setter Property="Padding" Value="50 10" />
        <Setter Property="Margin" Value="10 10" />
        <Setter Property="Cursor" Value="Hand" />

        <Setter Property="local:IsBusyProperty.Value" Value="False" />

        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Border x:Name="Border"
                            CornerRadius="10"
                            BorderBrush="{TemplateBinding BorderBrush}"
                            BorderThickness="{TemplateBinding BorderThickness}"
                            Background="{TemplateBinding Background}" 
                            SnapsToDevicePixels="True">
                        <Grid>
                            <!-- Button Label -->
                            <TextBlock x:Name="Label"
                                   Text="{TemplateBinding Content}"
                                   Foreground="{TemplateBinding Foreground}"
                                   Visibility="{TemplateBinding local:IsBusyProperty.Value, Converter={local:BooleanToVisibilityConverter}}"
                                   Focusable="False" 
                                   FontFamily="{TemplateBinding FontFamily}"
                                   FontSize="{TemplateBinding FontSize}"
                                   HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" 
                                   Margin="{TemplateBinding Padding}" 
                                   SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" 
                                   VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                            <!-- Spin Icon -->
                            <TextBlock Style="{StaticResource SpinningIcon}" 
                                   HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" 
                                   FontSize="{TemplateBinding FontSize}"
                                   VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                   Visibility="{TemplateBinding local:IsBusyProperty.Value, Converter={local:BooleanToVisibilityConverter}, ConverterParameter=True}"
                                   />

                        </Grid>
                    </Border>
                    <!-- Hover Effects -->
                    <ControlTemplate.Triggers>
                        <EventTrigger RoutedEvent="MouseEnter">
                            <BeginStoryboard>
                                <Storyboard>
                                    <ColorAnimation To="{StaticResource RedVeryLight}" Duration="0:0:0.2" Storyboard.TargetName="Border" Storyboard.TargetProperty="Background.Color" />
                                </Storyboard>
                            </BeginStoryboard>
                        </EventTrigger>
                        <EventTrigger RoutedEvent="MouseLeave">
                            <BeginStoryboard>
                                <Storyboard>
                                    <ColorAnimation To="{StaticResource RedLight}" Duration="0:0:0.2" Storyboard.TargetName="Border" Storyboard.TargetProperty="Background.Color" />
                                </Storyboard>
                            </BeginStoryboard>
                        </EventTrigger>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter Property="Background" TargetName="Border" Value="{StaticResource RedVeryLightBrush}" />
                            <Setter Property="Foreground" TargetName="Label" Value="{StaticResource BackgroundVeryLightBrush}" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!-- Tertiary Button -->
    <Style TargetType="{x:Type Button}" x:Key="TertiaryButton" BasedOn="{StaticResource BaseStyle}">
        <Setter Property="Background" Value="{StaticResource GreenLightBrush}" />
        <Setter Property="BorderThickness" Value="0" />
        <Setter Property="FontSize" Value="{StaticResource FontSizeRegular}" />
        <Setter Property="Padding" Value="50 10" />
        <Setter Property="Margin" Value="10" />
        <Setter Property="Cursor" Value="Hand" />

        <Setter Property="local:IsBusyProperty.Value" Value="False" />

        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Border x:Name="Border"
                            CornerRadius="10"
                            BorderBrush="{TemplateBinding BorderBrush}"
                            BorderThickness="{TemplateBinding BorderThickness}"
                            Background="{TemplateBinding Background}" 
                            SnapsToDevicePixels="True">
                        <Grid>
                            <!-- Button Label -->
                            <TextBlock x:Name="Label"
                                   Text="{TemplateBinding Content}"
                                   Foreground="{TemplateBinding Foreground}"
                                   Visibility="{TemplateBinding local:IsBusyProperty.Value, Converter={local:BooleanToVisibilityConverter}}"
                                   Focusable="False" 
                                   FontFamily="{TemplateBinding FontFamily}"
                                   FontSize="{TemplateBinding FontSize}"
                                   HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" 
                                   Margin="{TemplateBinding Padding}" 
                                   SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" 
                                   VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                            <!-- Spin Icon -->
                            <TextBlock Style="{StaticResource SpinningIcon}" 
                                   HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" 
                                   FontSize="{TemplateBinding FontSize}"
                                   VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                   Visibility="{TemplateBinding local:IsBusyProperty.Value, Converter={local:BooleanToVisibilityConverter}, ConverterParameter=True}"
                                   />

                        </Grid>
                    </Border>
                    <!-- Hover Effects -->
                    <ControlTemplate.Triggers>
                        <EventTrigger RoutedEvent="MouseEnter">
                            <BeginStoryboard>
                                <Storyboard>
                                    <ColorAnimation To="{StaticResource GreenVeryLight}" Duration="0:0:0.2" Storyboard.TargetName="Border" Storyboard.TargetProperty="Background.Color" />
                                </Storyboard>
                            </BeginStoryboard>
                        </EventTrigger>
                        <EventTrigger RoutedEvent="MouseLeave">
                            <BeginStoryboard>
                                <Storyboard>
                                    <ColorAnimation To="{StaticResource GreenLight}" Duration="0:0:0.2" Storyboard.TargetName="Border" Storyboard.TargetProperty="Background.Color" />
                                </Storyboard>
                            </BeginStoryboard>
                        </EventTrigger>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter Property="Background" TargetName="Border" Value="{StaticResource ForegroundDarkBrush}" />
                            <Setter Property="Foreground" TargetName="Label" Value="{StaticResource ForegroundLightBrush}" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!-- Close Button -->
    <Style TargetType="{x:Type Button}" x:Key="CloseButton" BasedOn="{StaticResource BaseStyle}">
        <Setter Property="Width" Value="{Binding ActualHeight, RelativeSource={RelativeSource Self}}" />
        <Setter Property="VerticalAlignment" Value="Center" />
        <Setter Property="HorizontalAlignment" Value="Center" />
        <Setter Property="Foreground" Value="{StaticResource RedDarkBrush}" />
        <Setter Property="Cursor" Value="Hand" />

        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <TextBlock
                        x:Name="CloseIcon"
                        Foreground="{TemplateBinding Foreground}"
                        FontFamily="{StaticResource FontAwesome}"
                        Text="{StaticResource IconTimes}" />

                    <ControlTemplate.Triggers>
                        <!-- Hover Effect -->
                        <EventTrigger RoutedEvent="MouseEnter">
                            <BeginStoryboard>
                                <Storyboard>
                                    <ColorAnimation To="{StaticResource RedLight}" Duration="0:0:0.2" Storyboard.TargetName="CloseIcon" Storyboard.TargetProperty="Foreground.Color" />
                                </Storyboard>
                            </BeginStoryboard>
                        </EventTrigger>
                        <EventTrigger RoutedEvent="MouseLeave">
                            <BeginStoryboard>
                                <Storyboard>
                                    <ColorAnimation To="{StaticResource RedDark}" Duration="0:0:0.2" Storyboard.TargetName="CloseIcon" Storyboard.TargetProperty="Foreground.Color" />
                                </Storyboard>
                            </BeginStoryboard>
                        </EventTrigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!-- Base Icon Button -->
    <Style TargetType="{x:Type Button}" x:Key="BaseIconButton" BasedOn="{StaticResource BaseStyle}">
        <Setter Property="Background" Value="{StaticResource BackgroundDarkBrush}" />
        <Setter Property="BorderThickness" Value="0" />
        <Setter Property="FontSize" Value="{StaticResource FontSizeRegular}" />
        <Setter Property="Padding" Value="50 10" />
        <Setter Property="Margin" Value="10 10" />
        <Setter Property="VerticalAlignment" Value="Center" />
        <Setter Property="Cursor" Value="Hand" />

        <Setter Property="local:IsBusyProperty.Value" Value="False" />
        <Setter Property="local:IconName.Value" Value="" />

        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Border x:Name="Border"
                            CornerRadius="10"
                            BorderBrush="{TemplateBinding BorderBrush}"
                            BorderThickness="{TemplateBinding BorderThickness}"
                            Background="{TemplateBinding Background}" 
                            SnapsToDevicePixels="True">
                        <Grid>
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="Auto" />
                                <ColumnDefinition Width="*" />
                            </Grid.ColumnDefinitions>

                            <!-- Icon Label -->
                            <TextBlock x:Name="Icon"
                                       Grid.Column="0"
                                       Text="{TemplateBinding local:IconName.Value}"
                                       Foreground="{TemplateBinding Foreground}"
                                       FontFamily="{StaticResource FontAwesome}"
                                       FontSize="{TemplateBinding local:IconSize.Value}"
                                       Margin="20 20 15 20"
                                       HorizontalAlignment="Center"
                                       VerticalAlignment="Center"
                                       SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" 
                                       Visibility="{TemplateBinding local:IsBusyProperty.Value, Converter={local:BooleanToVisibilityConverter}}" />

                            <!-- Button Label -->
                            <TextBlock x:Name="Label"
                                       Grid.Column="1"
                                       Text="{TemplateBinding Content}"
                                       Foreground="{TemplateBinding Foreground}"
                                       Visibility="{TemplateBinding local:IsBusyProperty.Value, Converter={local:BooleanToVisibilityConverter}}"
                                       Focusable="False" 
                                       FontFamily="{TemplateBinding FontFamily}"
                                       FontSize="{TemplateBinding FontSize}"
                                       HorizontalAlignment="Center"
                                       Margin="0 10 20 10"
                                       SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"
                                       VerticalAlignment="Center"/>

                            <!-- Spin Icon -->
                            <TextBlock Grid.ColumnSpan="2"
                                       Style="{StaticResource SpinningIcon}"
                                       FontSize="{TemplateBinding FontSize}"
                                       HorizontalAlignment="Center"
                                       VerticalAlignment="Center"
                                       Visibility="{TemplateBinding local:IsBusyProperty.Value, Converter={local:BooleanToVisibilityConverter}, ConverterParameter=True}"
                                       />

                        </Grid>
                    </Border>
                    <!-- Hover Effects -->
                    <ControlTemplate.Triggers>
                        <EventTrigger RoutedEvent="MouseEnter">
                            <BeginStoryboard>
                                <Storyboard>
                                    <ColorAnimation To="{StaticResource BackgroundNormal}" Duration="0:0:0.2" Storyboard.TargetName="Border" Storyboard.TargetProperty="Background.Color" />
                                </Storyboard>
                            </BeginStoryboard>
                        </EventTrigger>
                        <EventTrigger RoutedEvent="MouseLeave">
                            <BeginStoryboard>
                                <Storyboard>
                                    <ColorAnimation To="{StaticResource BackgroundDark}" Duration="0:0:0.2" Storyboard.TargetName="Border" Storyboard.TargetProperty="Background.Color" />
                                </Storyboard>
                            </BeginStoryboard>
                        </EventTrigger>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter Property="Background" TargetName="Border" Value="{StaticResource BackgroundNormalBrush}" />
                            <Setter Property="Foreground" TargetName="Label" Value="{StaticResource BackgroundVeryDarkBrush}" />
                            <Setter Property="Foreground" TargetName="Icon" Value="{StaticResource BackgroundVeryDarkBrush}" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!-- Primary Icon Button -->
    <Style TargetType="{x:Type Button}" x:Key="PrimaryIconButton" BasedOn="{StaticResource BaseStyle}">
        <Setter Property="Background" Value="{StaticResource BlueLightBrush}" />
        <Setter Property="BorderThickness" Value="0" />
        <Setter Property="FontSize" Value="{StaticResource FontSizeRegular}" />
        <Setter Property="Padding" Value="50 10" />
        <Setter Property="Margin" Value="10 10" />
        <Setter Property="VerticalAlignment" Value="Center" />
        <Setter Property="Cursor" Value="Hand" />

        <Setter Property="local:IsBusyProperty.Value" Value="False" />
        <Setter Property="local:IconName.Value" Value="" />

        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Border x:Name="Border"
                            CornerRadius="10"
                            BorderBrush="{TemplateBinding BorderBrush}"
                            BorderThickness="{TemplateBinding BorderThickness}"
                            Background="{TemplateBinding Background}" 
                            SnapsToDevicePixels="True">
                        <Grid>
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="Auto" />
                                <ColumnDefinition Width="*" />
                            </Grid.ColumnDefinitions>

                            <!-- Icon Label -->
                            <TextBlock x:Name="Icon"
                                       Grid.Column="0"
                                       Text="{TemplateBinding local:IconName.Value}"
                                       Foreground="{TemplateBinding Foreground}"
                                       FontFamily="{StaticResource FontAwesome}"
                                       FontSize="{TemplateBinding local:IconSize.Value}"
                                       Margin="20 20 15 20"
                                       HorizontalAlignment="Center"
                                       VerticalAlignment="Center"
                                       SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" 
                                       Visibility="{TemplateBinding local:IsBusyProperty.Value, Converter={local:BooleanToVisibilityConverter}}" />

                            <!-- Button Label -->
                            <TextBlock x:Name="Label"
                                       Grid.Column="1"
                                       Text="{TemplateBinding Content}"
                                       Foreground="{TemplateBinding Foreground}"
                                       Visibility="{TemplateBinding local:IsBusyProperty.Value, Converter={local:BooleanToVisibilityConverter}}"
                                       Focusable="False" 
                                       FontFamily="{TemplateBinding FontFamily}"
                                       FontSize="{TemplateBinding FontSize}"
                                       HorizontalAlignment="Center"
                                       Margin="0 10 20 10"
                                       SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"
                                       VerticalAlignment="Center"/>
                            
                            <!-- Spin Icon -->
                            <TextBlock Grid.ColumnSpan="2"
                                       Style="{StaticResource SpinningIcon}"
                                       FontSize="{TemplateBinding FontSize}"
                                       HorizontalAlignment="Center"
                                       VerticalAlignment="Center"
                                       Visibility="{TemplateBinding local:IsBusyProperty.Value, Converter={local:BooleanToVisibilityConverter}, ConverterParameter=True}"
                                       />

                        </Grid>
                    </Border>
                    <!-- Hover Effects -->
                    <ControlTemplate.Triggers>
                        <EventTrigger RoutedEvent="MouseEnter">
                            <BeginStoryboard>
                                <Storyboard>
                                    <ColorAnimation To="{StaticResource BlueVeryLight}" Duration="0:0:0.2" Storyboard.TargetName="Border" Storyboard.TargetProperty="Background.Color" />
                                </Storyboard>
                            </BeginStoryboard>
                        </EventTrigger>
                        <EventTrigger RoutedEvent="MouseLeave">
                            <BeginStoryboard>
                                <Storyboard>
                                    <ColorAnimation To="{StaticResource BlueLight}" Duration="0:0:0.2" Storyboard.TargetName="Border" Storyboard.TargetProperty="Background.Color" />
                                </Storyboard>
                            </BeginStoryboard>
                        </EventTrigger>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter Property="Background" TargetName="Border" Value="{StaticResource BlueVeryLightBrush}" />
                            <Setter Property="Foreground" TargetName="Label" Value="{StaticResource BackgroundVeryDarkBrush}" />
                            <Setter Property="Foreground" TargetName="Icon" Value="{StaticResource BackgroundVeryDarkBrush}" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!-- Secondary Icon Button -->
    <Style TargetType="{x:Type Button}" x:Key="SecondaryIconButton" BasedOn="{StaticResource BaseStyle}">
        <Setter Property="Background" Value="{StaticResource RedLightBrush}" />
        <Setter Property="BorderThickness" Value="0" />
        <Setter Property="FontSize" Value="{StaticResource FontSizeRegular}" />
        <Setter Property="Padding" Value="50 10" />
        <Setter Property="Margin" Value="10 10" />
        <Setter Property="VerticalAlignment" Value="Center" />
        <Setter Property="Cursor" Value="Hand" />

        <Setter Property="local:IsBusyProperty.Value" Value="False" />
        <Setter Property="local:IconName.Value" Value="" />

        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Border x:Name="Border"
                            CornerRadius="10"
                            BorderBrush="{TemplateBinding BorderBrush}"
                            BorderThickness="{TemplateBinding BorderThickness}"
                            Background="{TemplateBinding Background}" 
                            SnapsToDevicePixels="True">
                        <Grid>
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="Auto" />
                                <ColumnDefinition Width="*" />
                            </Grid.ColumnDefinitions>

                            <!-- Icon Label -->
                            <TextBlock x:Name="Icon"
                                       Grid.Column="0"
                                       Text="{TemplateBinding local:IconName.Value}"
                                       Foreground="{TemplateBinding Foreground}"
                                       FontFamily="{StaticResource FontAwesome}"
                                       FontSize="{TemplateBinding local:IconSize.Value}"
                                       Margin="20 20 15 20"
                                       HorizontalAlignment="Center"
                                       VerticalAlignment="Center"
                                       SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" 
                                       Visibility="{TemplateBinding local:IsBusyProperty.Value, Converter={local:BooleanToVisibilityConverter}}" />

                            <!-- Button Label -->
                            <TextBlock x:Name="Label"
                                       Grid.Column="1"
                                       Text="{TemplateBinding Content}"
                                       Foreground="{TemplateBinding Foreground}"
                                       Visibility="{TemplateBinding local:IsBusyProperty.Value, Converter={local:BooleanToVisibilityConverter}}"
                                       Focusable="False" 
                                       FontFamily="{TemplateBinding FontFamily}"
                                       FontSize="{TemplateBinding FontSize}"
                                       HorizontalAlignment="Center"
                                       Margin="0 10 20 10"
                                       SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"
                                       VerticalAlignment="Center"/>

                            <!-- Spin Icon -->
                            <TextBlock Grid.ColumnSpan="2"
                                       Style="{StaticResource SpinningIcon}"
                                       FontSize="{TemplateBinding FontSize}"
                                       HorizontalAlignment="Center"
                                       VerticalAlignment="Center"
                                       Visibility="{TemplateBinding local:IsBusyProperty.Value, Converter={local:BooleanToVisibilityConverter}, ConverterParameter=True}"
                                       />

                        </Grid>
                    </Border>
                    <!-- Hover Effects -->
                    <ControlTemplate.Triggers>
                        <EventTrigger RoutedEvent="MouseEnter">
                            <BeginStoryboard>
                                <Storyboard>
                                    <ColorAnimation To="{StaticResource RedVeryLight}" Duration="0:0:0.2" Storyboard.TargetName="Border" Storyboard.TargetProperty="Background.Color" />
                                </Storyboard>
                            </BeginStoryboard>
                        </EventTrigger>
                        <EventTrigger RoutedEvent="MouseLeave">
                            <BeginStoryboard>
                                <Storyboard>
                                    <ColorAnimation To="{StaticResource RedLight}" Duration="0:0:0.2" Storyboard.TargetName="Border" Storyboard.TargetProperty="Background.Color" />
                                </Storyboard>
                            </BeginStoryboard>
                        </EventTrigger>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter Property="Background" TargetName="Border" Value="{StaticResource RedVeryLightBrush}" />
                            <Setter Property="Foreground" TargetName="Label" Value="{StaticResource BackgroundVeryDarkBrush}" />
                            <Setter Property="Foreground" TargetName="Icon" Value="{StaticResource BackgroundVeryDarkBrush}" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!-- Tertiary Icon Button -->
    <Style TargetType="{x:Type Button}" x:Key="TertiaryIconButton" BasedOn="{StaticResource BaseStyle}">
        <Setter Property="Background" Value="{StaticResource GreenLightBrush}" />
        <Setter Property="BorderThickness" Value="0" />
        <Setter Property="FontSize" Value="{StaticResource FontSizeRegular}" />
        <Setter Property="Padding" Value="50 10" />
        <Setter Property="Margin" Value="10 10" />
        <Setter Property="VerticalAlignment" Value="Center" />
        <Setter Property="Cursor" Value="Hand" />

        <Setter Property="local:IsBusyProperty.Value" Value="False" />
        <Setter Property="local:IconName.Value" Value="" />

        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Border x:Name="Border"
                            CornerRadius="10"
                            BorderBrush="{TemplateBinding BorderBrush}"
                            BorderThickness="{TemplateBinding BorderThickness}"
                            Background="{TemplateBinding Background}" 
                            SnapsToDevicePixels="True">
                        <Grid>
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="Auto" />
                                <ColumnDefinition Width="*" />
                            </Grid.ColumnDefinitions>

                            <!-- Icon Label -->
                            <TextBlock x:Name="Icon"
                                       Grid.Column="0"
                                       Text="{TemplateBinding local:IconName.Value}"
                                       Foreground="{TemplateBinding Foreground}"
                                       FontFamily="{StaticResource FontAwesome}"
                                       FontSize="{TemplateBinding local:IconSize.Value}"
                                       Margin="20 20 15 20"
                                       HorizontalAlignment="Center"
                                       VerticalAlignment="Center"
                                       SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" 
                                       Visibility="{TemplateBinding local:IsBusyProperty.Value, Converter={local:BooleanToVisibilityConverter}}" />

                            <!-- Button Label -->
                            <TextBlock x:Name="Label"
                                       Grid.Column="1"
                                       Text="{TemplateBinding Content}"
                                       Foreground="{TemplateBinding Foreground}"
                                       Visibility="{TemplateBinding local:IsBusyProperty.Value, Converter={local:BooleanToVisibilityConverter}}"
                                       Focusable="False" 
                                       FontFamily="{TemplateBinding FontFamily}"
                                       FontSize="{TemplateBinding FontSize}"
                                       HorizontalAlignment="Center"
                                       Margin="0 10 20 10"
                                       SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"
                                       VerticalAlignment="Center"/>

                            <!-- Spin Icon -->
                            <TextBlock Grid.ColumnSpan="2"
                                       Style="{StaticResource SpinningIcon}"
                                       FontSize="{TemplateBinding FontSize}"
                                       HorizontalAlignment="Center"
                                       VerticalAlignment="Center"
                                       Visibility="{TemplateBinding local:IsBusyProperty.Value, Converter={local:BooleanToVisibilityConverter}, ConverterParameter=True}"
                                       />

                        </Grid>
                    </Border>
                    <!-- Hover Effects -->
                    <ControlTemplate.Triggers>
                        <EventTrigger RoutedEvent="MouseEnter">
                            <BeginStoryboard>
                                <Storyboard>
                                    <ColorAnimation To="{StaticResource GreenVeryLight}" Duration="0:0:0.2" Storyboard.TargetName="Border" Storyboard.TargetProperty="Background.Color" />
                                </Storyboard>
                            </BeginStoryboard>
                        </EventTrigger>
                        <EventTrigger RoutedEvent="MouseLeave">
                            <BeginStoryboard>
                                <Storyboard>
                                    <ColorAnimation To="{StaticResource GreenLight}" Duration="0:0:0.2" Storyboard.TargetName="Border" Storyboard.TargetProperty="Background.Color" />
                                </Storyboard>
                            </BeginStoryboard>
                        </EventTrigger>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter Property="Background" TargetName="Border" Value="{StaticResource GreenVeryLightBrush}" />
                            <Setter Property="Foreground" TargetName="Label" Value="{StaticResource ForegroundMainBrush}" />
                            <Setter Property="Foreground" TargetName="Icon" Value="{StaticResource ForegroundMainBrush}" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!-- Two State Button -->
    <Style TargetType="{x:Type Button}" x:Key="TwoStateButton" BasedOn="{StaticResource BaseStyle}">
        <Setter Property="Background" Value="{StaticResource RedLightBrush}" />
        <Setter Property="BorderThickness" Value="0" />
        <Setter Property="FontSize" Value="{StaticResource FontSizeRegular}" />
        <Setter Property="Padding" Value="50 10" />
        <Setter Property="Margin" Value="10" />
        <Setter Property="Cursor" Value="Hand" />

        <Setter Property="local:IsBusyProperty.Value" Value="False" />

        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Border x:Name="BlueBorder"
                            CornerRadius="10"
                            BorderBrush="{TemplateBinding BorderBrush}"
                            BorderThickness="{TemplateBinding BorderThickness}"
                            Background="{TemplateBinding Background}" 
                            SnapsToDevicePixels="True">
                        <Border x:Name="GreenBorder"
                                CornerRadius="10"
                                BorderBrush="{TemplateBinding BorderBrush}"
                                BorderThickness="{TemplateBinding BorderThickness}"
                                Background="{StaticResource GreenLightBrush}" 
                                SnapsToDevicePixels="True">

                            <Grid>
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="Auto" />
                                    <ColumnDefinition Width="*" />
                                </Grid.ColumnDefinitions>

                                <!-- Active Icon Label -->
                                <TextBlock x:Name="ActiveIcon"
                                       Grid.Column="0"
                                       Text="{TemplateBinding local:ActiveIcon.Value}"
                                       Foreground="{TemplateBinding Foreground}"
                                       FontFamily="{StaticResource FontAwesome}"
                                       FontSize="{TemplateBinding local:IconSize.Value}"
                                       Margin="20 20 15 20"
                                       SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" 
                                       HorizontalAlignment="Center" 
                                       VerticalAlignment="Center" 
                                       Visibility="{TemplateBinding local:IsBusyProperty.Value, Converter={local:BooleanToVisibilityConverter}}" />

                                <!-- Deactive Icon Label -->
                                <TextBlock x:Name="DeactiveIcon"
                                       Grid.Column="0"
                                       Text="{TemplateBinding local:DeactiveIcon.Value}"
                                       Foreground="{TemplateBinding Foreground}"
                                       FontFamily="{StaticResource FontAwesome}"
                                       FontSize="{TemplateBinding local:IconSize.Value}"
                                       Margin="20 20 15 20"
                                       HorizontalAlignment="Center"
                                       VerticalAlignment="Center"
                                       SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" 
                                       Visibility="{TemplateBinding local:IsBusyProperty.Value, Converter={local:BooleanToVisibilityConverter}}" />

                                <!-- Active Label -->
                                <TextBlock x:Name="ActiveLabel"
                                               Grid.Column="1"
                                               Text="{TemplateBinding local:ActiveLabel.Value}"
                                               Foreground="{TemplateBinding Foreground}"
                                               Visibility="{TemplateBinding local:IsBusyProperty.Value, Converter={local:BooleanToVisibilityConverter}}"
                                               FontFamily="{TemplateBinding FontFamily}"
                                               HorizontalAlignment="Center" 
                                               VerticalAlignment="Center"
                                               FontSize="{TemplateBinding FontSize}"
                                               Margin="0 10 20 10"
                                               SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />

                                <!-- Deactive Label -->
                                <TextBlock x:Name="DeactiveLabel"
                                               Grid.Column="1"
                                               Text="{TemplateBinding local:DeactiveLabel.Value}"
                                               Foreground="{TemplateBinding Foreground}"
                                               Visibility="{TemplateBinding local:IsBusyProperty.Value, Converter={local:BooleanToVisibilityConverter}}"
                                               FontFamily="{TemplateBinding FontFamily}"
                                               HorizontalAlignment="Center" 
                                               VerticalAlignment="Center"
                                               FontSize="{TemplateBinding FontSize}"
                                               Margin="0 10 20 10"
                                               SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />

                                <!-- Spin Icon -->
                                <TextBlock Grid.ColumnSpan="2"
                                       Style="{StaticResource SpinningIcon}"
                                       FontSize="{TemplateBinding FontSize}"
                                       HorizontalAlignment="Center"
                                       VerticalAlignment="Center"
                                       Visibility="{TemplateBinding local:IsBusyProperty.Value, Converter={local:BooleanToVisibilityConverter}, ConverterParameter=True}"
                                       />

                            </Grid>
                        </Border>
                    </Border>
                    <!-- Hover Effects -->
                    <ControlTemplate.Triggers>
                        <EventTrigger RoutedEvent="MouseEnter">
                            <BeginStoryboard>
                                <Storyboard>
                                    <ColorAnimation To="{StaticResource RedVeryLight}" Duration="0:0:0.2" Storyboard.TargetName="BlueBorder" Storyboard.TargetProperty="Background.Color" />
                                </Storyboard>
                            </BeginStoryboard>
                        </EventTrigger>
                        <EventTrigger RoutedEvent="MouseLeave">
                            <BeginStoryboard>
                                <Storyboard>
                                    <ColorAnimation To="{StaticResource RedLight}" Duration="0:0:0.2" Storyboard.TargetName="BlueBorder" Storyboard.TargetProperty="Background.Color" />
                                </Storyboard>
                            </BeginStoryboard>
                        </EventTrigger>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter Property="Background" TargetName="BlueBorder" Value="{StaticResource RedVeryLightBrush}" />
                            <Setter Property="Background" TargetName="GreenBorder" Value="{StaticResource GreenVeryLightBrush}" />
                            <Setter Property="Foreground" TargetName="ActiveLabel" Value="{StaticResource BackgroundVeryDarkBrush}" />
                            <Setter Property="Foreground" TargetName="DeactiveLabel" Value="{StaticResource BackgroundVeryDarkBrush}" />
                            <Setter Property="Foreground" TargetName="ActiveIcon" Value="{StaticResource BackgroundVeryDarkBrush}" />
                            <Setter Property="Foreground" TargetName="DeactiveIcon" Value="{StaticResource BackgroundVeryDarkBrush}" />
                        </Trigger>
                        <Trigger Property="local:IsSelectedProperty.Value" Value="True">
                            <Setter Property="Background" TargetName="GreenBorder" Value="{StaticResource GreenLightBrush}" />
                            <Setter Property="Visibility" TargetName="ActiveLabel" Value="Visible" />
                            <Setter Property="Visibility" TargetName="DeactiveLabel" Value="Hidden" />
                            <Setter Property="Visibility" TargetName="ActiveIcon" Value="Visible" />
                            <Setter Property="Visibility" TargetName="DeactiveIcon" Value="Hidden" />
                        </Trigger>
                        <Trigger Property="local:IsSelectedProperty.Value" Value="False">
                            <Setter Property="Background" TargetName="GreenBorder" Value="Transparent" />
                            <Setter Property="Visibility" TargetName="ActiveLabel" Value="Hidden" />
                            <Setter Property="Visibility" TargetName="DeactiveLabel" Value="Visible" />
                            <Setter Property="Visibility" TargetName="ActiveIcon" Value="Hidden" />
                            <Setter Property="Visibility" TargetName="DeactiveIcon" Value="Visible" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!-- Icon Button -->
    <Style TargetType="{x:Type Button}" x:Key="IconButton" BasedOn="{StaticResource BaseStyle}">
        <Setter Property="Foreground" Value="{StaticResource ForegroundVeryDarkBrush}" />
        <Setter Property="Cursor" Value="Hand" />

        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ButtonBase}">
                    <TextBlock x:Name="Label"
                               Text="{TemplateBinding Content}"
                               Foreground="{TemplateBinding Foreground}"
                               FontFamily="{StaticResource FontAwesome}"
                               FontSize="{TemplateBinding FontSize}"
                               Padding="{TemplateBinding Padding}"
                               HorizontalAlignment="Center"
                               VerticalAlignment="Center" />

                    <!-- Hover Effects -->
                    <ControlTemplate.Triggers>
                        <EventTrigger RoutedEvent="MouseEnter">
                            <BeginStoryboard>
                                <Storyboard>
                                    <ColorAnimation To="{StaticResource ForegroundDark}" Duration="0:0:0.2" Storyboard.TargetName="Label" Storyboard.TargetProperty="Foreground.Color" />
                                </Storyboard>
                            </BeginStoryboard>
                        </EventTrigger>
                        <EventTrigger RoutedEvent="MouseLeave">
                            <BeginStoryboard>
                                <Storyboard>
                                    <ColorAnimation To="{StaticResource ForegroundVeryDark}" Duration="0:0:0.2" Storyboard.TargetName="Label" Storyboard.TargetProperty="Foreground.Color" />
                                </Storyboard>
                            </BeginStoryboard>
                        </EventTrigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!-- User Top Card Button -->
    <!-- TODO: Better green dot -->
    <Style TargetType="{x:Type Button}" x:Key="UserCardButton">
        <Setter Property="HorizontalAlignment" Value="Right" />
        <Setter Property="VerticalAlignment" Value="Center" />
        <Setter Property="Margin" Value="10 0" />
        <Setter Property="Padding" Value="10 0" />

        <Setter Property="Background" Value="{StaticResource ForegroundDarkBrush}" />

        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Border x:Name="Border"
                            CornerRadius="4"
                            Padding="{TemplateBinding Padding}"
                            Background="{TemplateBinding Background}">
                        <StackPanel Orientation="Horizontal">

                            <!-- Green Dot -->
                            <Ellipse Fill="{StaticResource BlueDarkBrush}" Height="8" Width="8" />

                            <!-- User Name -->
                            <TextBlock Text="{TemplateBinding Content}" Margin="5 0" />
                            
                        </StackPanel>
                    </Border>
                    

                    <ControlTemplate.Triggers>
                        <!-- Hover Effect -->
                        <EventTrigger RoutedEvent="MouseEnter">
                            <BeginStoryboard>
                                <Storyboard>
                                    <ColorAnimation To="{StaticResource ForegroundVeryDark}" Duration="0:0:0.2" Storyboard.TargetName="Border" Storyboard.TargetProperty="Background.Color" />
                                </Storyboard>
                            </BeginStoryboard>
                        </EventTrigger>
                        <EventTrigger RoutedEvent="MouseLeave">
                            <BeginStoryboard>
                                <Storyboard>
                                    <ColorAnimation To="{StaticResource ForegroundDark}" Duration="0:0:0.2" Storyboard.TargetName="Border" Storyboard.TargetProperty="Background.Color" />
                                </Storyboard>
                            </BeginStoryboard>
                        </EventTrigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!-- Start/Stop Button Style -->
    <Style TargetType="{x:Type Button}" x:Key="StartStopButton">
        <Setter Property="Padding" Value="10" />
        <Setter Property="Margin" Value="0 5" />
        <Setter Property="HorizontalAlignment" Value="Center" />
        <Setter Property="Background" Value="{StaticResource BackgroundLightBrush}" />

        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Border x:Name="Border"
                                CornerRadius="5"
                                Padding="{TemplateBinding Padding}"
                                Background="{TemplateBinding Background}"
                                SnapsToDevicePixels="True">
                        <Grid Background="Transparent">

                            <!-- Start Label -->
                            <TextBlock x:Name="StartText"
                                           Text="Iniciar"
                                           HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                           SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" 
                                           VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                           Visibility="Visible" />

                            <!-- Stop Label -->
                            <TextBlock x:Name="StopText"
                                           Text="Parar"
                                           HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                           SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" 
                                           VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                           Visibility="Visible" />

                        </Grid>
                    </Border>

                    <ControlTemplate.Triggers>
                        <!-- Hover Effect -->
                        <EventTrigger RoutedEvent="MouseEnter">
                            <BeginStoryboard>
                                <Storyboard>
                                    <ColorAnimation To="{StaticResource BlueLight}" Duration="0:0:0.2" Storyboard.TargetName="Border" Storyboard.TargetProperty="Background.Color" />
                                </Storyboard>
                            </BeginStoryboard>
                        </EventTrigger>
                        <EventTrigger RoutedEvent="MouseLeave">
                            <BeginStoryboard>
                                <Storyboard>
                                    <ColorAnimation To="{StaticResource BackgroundLight}" Duration="0:0:0.2" Storyboard.TargetName="Border" Storyboard.TargetProperty="Background.Color" />
                                </Storyboard>
                            </BeginStoryboard>
                        </EventTrigger>

                        <!-- Button Control -->
                        <Trigger Property="local:IsSelectedProperty.Value" Value="True">
                            <Setter TargetName="StartText" Property="Visibility" Value="Collapsed" />
                        </Trigger>
                        <Trigger Property="local:IsSelectedProperty.Value" Value="False">
                            <Setter TargetName="StopText" Property="Visibility" Value="Collapsed" />
                        </Trigger>

                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

</ResourceDictionary>